{
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: $batch_size,
        layers: [
                 !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                     layer_name: 'h0',
                     #pad: 4,
                     #tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     output_channels: 48,
                     #num_pieces: 2,
                     kernel_shape: [8, 8],
                     pool_shape: [4, 4],
                     pool_stride: [2, 2],
                     irange: .05,
                     #max_kernel_norm: .9,
                 },
                 !obj:pylearn2.models.mlp.ConvRectifiedLinear {
                     layer_name: 'h1',
                     #pad: 3,
                     #tied_b: 1,
                     W_lr_scale: .05,
                     b_lr_scale: .05,
                     output_channels: 128,
                     #num_pieces: 2,
                     kernel_shape: [8, 8],
                     pool_shape: [4, 4],
                     pool_stride: [2, 2],
                     irange: .05,
                     # max_kernel_norm: 1.9365,
                 },
                 #!obj:pylearn2.models.maxout.MaxoutConvC01B {
                 #    pad: 3,
                 #    layer_name: 'h2',
                 #    tied_b: 1,
                 #    W_lr_scale: .05,
                 #    b_lr_scale: .05,
                 #    num_channels: 128,
                 #    num_pieces: 2,
                 #    kernel_shape: [5, 5],
                 #    pool_shape: [2, 2],
                 #    pool_stride: [2, 2],
                 #    irange: .005,
                 #    max_kernel_norm: 1.9365,
                 #},
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                    layer_name: 'h3',
                    irange: .005,
                    #num_units: 240,
                    #num_pieces: 5,
                    dim: 240,
                    #max_col_norm: 1.9
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                   #max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 10,
                     irange: .05
                 }
                ],
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [32, 32],
            num_channels: 3,
            axes: ['c', 0, 1, 'b'],
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .1,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: 0.5,
        },
        #cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
        #    input_include_probs: { 'h0' : .8 },
        #    input_scales: { 'h0': 1. }
        #},
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 100
        },
    },
    save_freq: 1
}
